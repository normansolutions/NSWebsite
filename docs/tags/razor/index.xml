<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Razor on NS News and Views</title>
    <link>https://normansolutions.co.uk/tags/razor/</link>
    <description>Recent content in Razor on NS News and Views</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <lastBuildDate>Sat, 19 Sep 2015 12:58:34 +0000</lastBuildDate>
    
	<atom:link href="https://normansolutions.co.uk/tags/razor/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Secure a webpage without a logon?</title>
      <link>https://normansolutions.co.uk/secure-a-webpage-without-a-logon/</link>
      <pubDate>Sat, 19 Sep 2015 12:58:34 +0000</pubDate>
      
      <guid>https://normansolutions.co.uk/secure-a-webpage-without-a-logon/</guid>
      <description>Secure access to a webpage, without the need for a logon, can often be viewed as a bit of a holy grail solution.
Recently, I introduced a frictionless (logon free) way of providing secure(ish) access to some very basic web services.</description>
    </item>
    
    <item>
      <title>Cache-busting in C# without querystrings</title>
      <link>https://normansolutions.co.uk/cache-busting-in-c-without-querystrings/</link>
      <pubDate>Mon, 14 Jul 2014 21:38:20 +0000</pubDate>
      
      <guid>https://normansolutions.co.uk/cache-busting-in-c-without-querystrings/</guid>
      <description>A key benefit of working with the web (or more specifically http) is it’s native ability to cache. This can be ‘tuned’ to make websites extremely fast and slick, especially after initial page load.</description>
    </item>
    
  </channel>
</rss>