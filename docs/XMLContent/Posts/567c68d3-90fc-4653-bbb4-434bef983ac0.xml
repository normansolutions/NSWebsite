<?xml version="1.0" encoding="utf-8"?>
<post>
  <title>Stamp an iSAMS report with the current username</title>
  <slug>stamp-an-isams-report-with-the-current-username</slug>
  <author></author>
  <pubDate>2014-11-30 08:28:45</pubDate>
  <lastModified>2014-12-01 11:51:33</lastModified>
  <content>&lt;p&gt;During the summer of 2014, we migrated the &lt;a href="http://www.st-marys-shaftesbury.co.uk/" target="_blank"&gt;St Mary’s Shaftesbury&lt;/a&gt; MIS &lt;em&gt;(&lt;a href="http://en.wikipedia.org/wiki/Management_information_system" target="_blank"&gt;Management Information System&lt;/a&gt;)&lt;/em&gt; from &lt;a href="http://www.furlongsolutions.com/" target="_blank"&gt;Schoolbase&lt;/a&gt; to &lt;a href="http://www.isams.co.uk/" target="_blank"&gt;iSAMS&lt;/a&gt;.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Please note, that the reasons for instigating this major system change, and the processes involved &lt;em&gt;(political &amp;amp; technical),&lt;/em&gt; are &lt;em&gt;not&lt;/em&gt; covered in this blog post.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;Anyone who has ever had responsibility for changing a central IT system, will know that it’s never a pain free experience, and can be fraught with frustration.&amp;nbsp; Thankfully, in our particular instance, I can report that the majority of bespoke functionality and add-ons, were successfully ‘ported’ over from one system to another.&amp;nbsp; Data migration, for the most part, was also a success.&lt;/p&gt; &lt;p&gt;Once iSAMS was in place, there were some data report requirements; iSAMS uses &lt;a href="http://msdn.microsoft.com/en-us/library/ms159106.aspx" target="_blank"&gt;SSRS&lt;/a&gt; for it’s reporting engine, so several reports had to be re-created within this environment.&lt;/p&gt; &lt;p&gt;One such requirement was for a health &amp;amp; emergency contact report, which in short, was to include the student photograph and an array of medical and parental contact information; ideal for trips etc. &lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;It goes without saying that this report also needed to be clearly stamped with instructions and guidance pertaining to &lt;a href="https://ico.org.uk/for_organisations/data_protection" target="_blank"&gt;Data Protection&lt;/a&gt; legislation.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;The report itself was a fairly complex composition of embedded reports and queries, which resulted in a nice presentation of the required data.&lt;/p&gt; &lt;p&gt;&lt;a href="https://normansolutions.co.uk/posts/files/756b7cef-8082-48ab-9b30-22f768c28cab.jpg"&gt;&lt;img title="report" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="report" src="https://normansolutions.co.uk/posts/files/3b38d6a1-8f4b-4ea3-b152-a6f16cd021f2.jpg" width="244" height="176"&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Traceability&lt;/h2&gt; &lt;p&gt;Whilst the report performed the task perfectly, from a data extraction perspective, and was indeed ‘stamped’ &lt;em&gt;(in bright red)&lt;/em&gt; with instructions regarding the shredding of the document after use etc, there were no details about who had &lt;em&gt;actually&lt;/em&gt; printed the report.&lt;/p&gt; &lt;p&gt;After a &lt;em&gt;lot&lt;/em&gt; of Googling and code testing &lt;em&gt;(including the creation of bespoke SSRS functions within the report),&lt;/em&gt; I came to the conclusion that grabbing the name of the user who actually instigated the report, was not possible from the server.&lt;/p&gt; &lt;p&gt;Logically the workflow doesn’t allow for this, as from an SSRS perspective, the ‘user’ and indeed the ‘machine’ firing the report, are of course, the iSAMS generic user and iSAMS server!&lt;/p&gt; &lt;h2&gt;Resolved&lt;/h2&gt; &lt;p&gt;A re-think of the workflow, led me to establishing the presence of an iSAMS ‘&lt;a href="http://en.wikipedia.org/wiki/HTTP_cookie" target="_blank"&gt;cookie&lt;/a&gt;’ &lt;em&gt;(using the excellent &lt;/em&gt;&lt;a href="http://www.telerik.com/fiddler" target="_blank"&gt;&lt;em&gt;fiddler&lt;/em&gt;&lt;/a&gt;&lt;em&gt; program to sniff traffic), &lt;/em&gt;providing username details.&amp;nbsp; All I needed to do, was extract this cookie and send it as a form parameter, when the report was requested.&amp;nbsp; This parameter could then be included within the SSRS report, as an &lt;a href="http://msdn.microsoft.com/en-us/library/dd220464.aspx" target="_blank"&gt;SSRS Parameter&lt;/a&gt; field, and displayed accordingly – simple!&lt;/p&gt; &lt;p&gt;I’m happy to report that after locating the iSAMS ASP form and establishing the appropriate function call, I was able add a small JavaScript snippet and HTML form field, to this page (&lt;em&gt;detailed below), &lt;/em&gt;which resulted in the user’s name &lt;em&gt;(from the cookie)&lt;/em&gt; being printed onto the report.&lt;/p&gt; &lt;p&gt;Job done!&lt;/p&gt;&lt;script gitsrc="https://gist.github.com/normansolutions/06aab85f3b44c6d43646.js"&gt;&lt;/script&gt;&lt;noscript&gt;&lt;a href="https://gist.github.com/06aab85f3b44c6d43646"&gt;Click for code snippet&lt;/a&gt;&lt;/noscript&gt; &lt;br&gt;&lt;script gitsrc="https://gist.github.com/normansolutions/afe7a06e2b0862a2a382.js"&gt;&lt;/script&gt;&lt;noscript&gt;&lt;a href="https://gist.github.com/afe7a06e2b0862a2a382"&gt;Click for code snippet&lt;/a&gt;&lt;/noscript&gt;  &lt;hr&gt;  &lt;h2&gt;A Real World Solution or Just a Proof Of Concept?&lt;/h2&gt; &lt;p&gt;Of course, I fully appreciate that it only needs iSAMS to overwrite this page on an update, and my code snippet will vanish.&lt;/p&gt; &lt;p&gt;To cater for this &lt;em&gt;potential&lt;/em&gt; code destruction, we have implemented the below &lt;a href="http://en.wikipedia.org/wiki/Windows_PowerShell" target="_blank"&gt;PowerShell&lt;/a&gt; script, which runs on a nightly schedule.&amp;nbsp; The script automatically emails the ICT Department, if there are any changes made to this particular file &lt;em&gt;(using the &lt;a href="http://technet.microsoft.com/en-us/library/ee156812.aspx" target="_blank"&gt;Compare-Object&lt;/a&gt; PowerShell &lt;a href="http://msdn.microsoft.com/en-gb/library/ms714395%28v=vs.85%29.aspx" target="_blank"&gt;cmdlet&lt;/a&gt;)&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;It’s a useful PowerShell script in it’s own right!&lt;/strong&gt;&lt;/p&gt;&lt;script gitsrc="https://gist.github.com/normansolutions/7f2fd50be6ec103b61ca.js"&gt;&lt;/script&gt;&lt;noscript&gt;&lt;a href="https://gist.github.com/7f2fd50be6ec103b61ca"&gt;Click for code snippet&lt;/a&gt;&lt;/noscript&gt;  &lt;hr&gt;  &lt;p&gt;Clearly an even better solution, would be having this functionality &lt;u&gt;&lt;strong&gt;officially&lt;/strong&gt;&lt;/u&gt; built into the iSAMS product, thus allowing for the creation of traceable reports.&amp;nbsp; However, in the meantime, whether you choose to view this as just a ‘&lt;em&gt;proof of concept&lt;/em&gt;’ or a ‘&lt;em&gt;real world solution&lt;/em&gt;’, it certainly seems to work for us.&lt;/p&gt; &lt;hr&gt;  &lt;h3&gt;&lt;/h3&gt; &lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;strong&gt;Update&lt;/strong&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;It transpires that the framework files &lt;strong&gt;do&lt;/strong&gt; indeed get overwritten on a nightly basis &lt;img class="wlEmoticon wlEmoticon-sadsmile" style="border-top-style: none; border-bottom-style: none; border-right-style: none; border-left-style: none" alt="Sad smile" src="https://normansolutions.co.uk/posts/files/a8c1cac1-e35d-421e-b641-adb3f37535ae.png"&gt;.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;I believe this is performed by ISAMS referencing a ‘Framework.xml file’ (in the root), which stores file information, including file hashes.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;Using &lt;a href="http://onlinemd5.com/" target="_blank"&gt;onlinemd5.com&lt;/a&gt; I created a hash of the ‘new’ file, and updated ‘Framework.xml’ accordingly.&amp;nbsp; The question is whether this ‘Framework.xml’ file is centrally updated by iSAMS, periodically?&amp;nbsp; I suppose only time will tell.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;It could be that only iSAMS can truly prevent the file from being overwritten – thus, a support email has been sent, asking for guidance.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;In the meantime, we will run with this process; of&lt;/em&gt;&lt;em&gt; course, if anyone else has a better solution, please suggest!&lt;/em&gt;&lt;/p&gt;</content>
  <ispublished>true</ispublished>
  <categories>
    <category>iSAMS</category>
    <category>MIS</category>
    <category>JavaScript</category>
    <category>SSRS</category>
    <category>PowerShell</category>
  </categories>
  <comments>
    <comment isAdmin="false" isApproved="true" id="2a917242-82de-4bcd-aac9-e3b708804340">
      <author>Greg Pakes</author>
      <email>greg.pakes@isams.co.uk</email>
      <website>http://www.isams.co.uk/</website>
      <ip>49.195.168.7</ip>
      <userAgent>Mozilla/5.0 (iPhone; CPU iPhone OS 8_1_1 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12B436 Safari/600.1.4</userAgent>
      <date>2014-11-29 03:12:17</date>
      <content>Great post Norman.  I do think there is a slight issue with the implementation.  The iSAMS Update System updates all files that are different on every update, so I suspect your powershell script will be emailing you a lot!  Essentially the file will be overwritten in every update regardless of whether or not we actually have updated the file. &lt;br /&gt;&lt;br /&gt;Greg Pakes&lt;br /&gt;Technical Director</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="3b1fac13-c35f-4957-b9c2-94824396752f">
      <author>Clive Norman</author>
      <email>hi@normansolutions.co.uk</email>
      <website>https://normansolutions.co.uk/</website>
      <ip>178.239.99.59</ip>
      <userAgent>Mozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; rv:11.0) like Gecko</userAgent>
      <date>2014-12-01 10:29:21</date>
      <content>Thanks Greg - I did edit the Framework.xml file (changed hash etc) but I totally understand that even this could get overwritten and reset everything back.</content>
    </comment>
  </comments>
</post>