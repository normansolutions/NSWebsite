<?xml version="1.0" encoding="utf-8"?>
<post>
  <title>Technically challenge your web designer!</title>
  <slug>technically-challenge-your-web-designer</slug>
  <author></author>
  <pubDate>2014-04-29 20:46:26</pubDate>
  <lastModified>2014-05-17 06:20:55</lastModified>
  <content>&lt;p&gt;I must confess to have slightly struggled with the title of this blog post, as I didn’t wish to be responsible for encouraging unnecessary complaints and animosity between clients and web designers!&lt;/p&gt; &lt;p&gt;However, I have all to often witnessed situations where a web design company &lt;em&gt;(or web designer)&lt;/em&gt; will &lt;u&gt;not&lt;/u&gt; be implementing recognised ‘best practice’ &lt;em&gt;(either through a lack of skills, or out of sheer laziness)&lt;/em&gt;, and will conveniently ‘hide’ behind the belief that a client is highly unlikely to spot poor architectural design!&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;em&gt;Well, here’s the truth – you &lt;strong&gt;don’t&lt;/strong&gt; need to be a technical web expert to spot some basic poor development practices.&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;Indeed, if you can use a browser, and have a basic understanding of how a webpage works, then you can easily learn a few tips, that will help you challenge your designer / developer.&lt;/p&gt; &lt;hr&gt;  &lt;h2&gt;What this post will &lt;em&gt;not&lt;/em&gt; cover&lt;/h2&gt; &lt;p&gt;Just to clarify; this is not intended to be a deep-dive technical article on the inner workings of speed, performance and optimisation in modern web design &lt;em&gt;(for that, there are plenty of other resources and &lt;/em&gt;&lt;a href="http://stevesouders.com/" target="_blank"&gt;&lt;em&gt;gurus&lt;/em&gt;&lt;/a&gt;&lt;em&gt; to be found on the internet, with far greater expertise than me).&lt;/em&gt;&lt;/p&gt; &lt;p&gt;I &lt;u&gt;shan’t&lt;/u&gt; be covering &lt;a href="http://css-tricks.com/css-sprites/" target="_blank"&gt;Image Sprites&lt;/a&gt;, &lt;a href="http://en.wikipedia.org/wiki/Content_delivery_network" target="_blank"&gt;CDN’s &lt;em&gt;(Content Deliver Networks)&lt;/em&gt;&lt;/a&gt;, &lt;a href="http://en.wikipedia.org/wiki/Responsive_web_design" target="_blank"&gt;Mobile Design&lt;/a&gt;, &lt;a href="http://css-tricks.com/judging-css-spotting-bad-code/" target="_blank"&gt;Poor Coding&lt;/a&gt; or &lt;a href="http://clearleft.com/" target="_blank"&gt;Modern UX Design Patterns&lt;/a&gt; etc.&lt;/p&gt; &lt;h2&gt;This post will primarily focus on:&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Page size and loading speed.  &lt;li&gt;Optimisation / placement of components and scripts on a webpage.&lt;/li&gt;&lt;/ul&gt; &lt;hr&gt;  &lt;h2&gt;Why only these?&lt;/h2&gt; &lt;p&gt;Aside from not wishing to provide &lt;em&gt;bedtime&lt;/em&gt; reading material for potential visitors, &lt;a href="http://en.wiktionary.org/wiki/IMHO" target="_blank"&gt;IMHO&lt;/a&gt;, I believe these basic factors are a good tell-tale benchmark as to whether a developer has good or poor understanding of modern web design architecture; it could also have a &lt;strong&gt;significant&lt;/strong&gt; bearing on how Google will rank your website in search results &lt;em&gt;&lt;a href="http://googlewebmastercentral.blogspot.co.uk/2010/04/using-site-speed-in-web-search-ranking.html" target="_blank"&gt;(Google now use site speed in web search ranking).&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &lt;h2&gt;One final point before we start – don’t be too critical!&lt;/h2&gt; &lt;p&gt;Most organisations nowadays, require the ability to update website content themselves – enter the &lt;a href="http://en.wikipedia.org/wiki/Content_management_system" target="_blank"&gt;CMS &lt;em&gt;(Content Management System)&lt;/em&gt;&lt;/a&gt;&lt;em&gt;.&lt;/em&gt;&amp;nbsp; The CMS is excellent on so many levels, but it does have the problem of needing to be ‘&lt;strong&gt;all things to all people&lt;/strong&gt;’ – as such, even with the best software engineers and designers in the world, you will almost certainly end up with a system that carries an element of ‘bloat’. &lt;/p&gt; &lt;p&gt;Unfortunately, it’s a bit of a trade off; flexibility verses efficiency.&amp;nbsp; &lt;em&gt;However&lt;/em&gt;, it still shouldn’t be used as an excuse for poor design architecture.&amp;nbsp; The goal, is to aim for perfection with the understanding that this is not always going to be achievable – be questioning, but also realistic.&lt;/p&gt;&lt;small&gt; &lt;p&gt;&lt;em&gt;(There is an assumption that very basic web design protocols are already in place (correct use of &lt;/em&gt;&lt;a href="http://blog.woorank.com/2013/04/how-to-use-heading-tags-for-seo/" target="_blank"&gt;&lt;em&gt;Headers&lt;/em&gt;&lt;/a&gt;&lt;em&gt;, &lt;/em&gt;&lt;a href="http://www.googlekeywordtool.com/" target="_blank"&gt;&lt;em&gt;Keywords&lt;/em&gt;&lt;/a&gt;&lt;em&gt; and &lt;/em&gt;&lt;a href="http://en.wikipedia.org/wiki/Meta_element" target="_blank"&gt;&lt;em&gt;Meta Tags&lt;/em&gt;&lt;/a&gt;&lt;em&gt; etc) – if your web designer isn’t implementing these, then you may as well give up now &lt;img class="wlEmoticon wlEmoticon-smile" style="border-top-style: none; border-bottom-style: none; border-right-style: none; border-left-style: none" alt="Smile" src="https://normansolutions.co.uk/posts/files/1d5e6b5d-3b3a-45f3-a2a1-0259a5d166ac.png"&gt;)&lt;/em&gt;&lt;/small&gt;  &lt;hr&gt;  &lt;h2&gt;Ok, let’s get to the meat!&lt;/h2&gt; &lt;p&gt;Google &lt;a href="http://www.google.com/intl/en_uk/chrome/browser/" target="_blank"&gt;Chrome&lt;/a&gt; is your friend here &lt;em&gt;(or more specifically the web &lt;/em&gt;&lt;a href="https://developers.google.com/chrome-developer-tools/" target="_blank"&gt;&lt;em&gt;developer tools&lt;/em&gt;&lt;/a&gt;&lt;em&gt; that come with Chrome).&lt;/em&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;If you haven’t done so already; go download, and install Google Chrome from &lt;a href="http://www.google.com/intl/en_uk/chrome/browser/" target="_blank"&gt;here&lt;/a&gt;.  &lt;li&gt;Once installed, go and grab the Chrome version of YSlow from &lt;a href="https://chrome.google.com/webstore/detail/yslow/ninejjcohidippngpapiilnmkgllmakh" target="_blank"&gt;here&lt;/a&gt;. &lt;/li&gt;&lt;/ul&gt; &lt;blockquote&gt; &lt;p&gt;&lt;em&gt;It’s worth noting that there are alternative options to these developer tools for other browsers (e.g. Internet Explorer and Firefox etc) – but at the time of posting, I think it is fair to state, that the Chrome Dev Tools are currently recognised as the better choice.&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;You should pretty much now have all you need to analyse your website in detail.  &lt;hr&gt;  &lt;h2&gt;Page size and loading speed&lt;/h2&gt; &lt;p&gt;It stands to reason that if your page size if too large &lt;em&gt;(in file size),&lt;/em&gt; then it is going to take a lot longer to download and display, clearly having a negative impact on your customers &lt;em&gt;(as well as your search ranking).&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Ok – open up Chrome, visit your website and then click on the ‘YSlow’ icon which you should see located at the top right hand side of your Chrome browser window.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;a href="https://normansolutions.co.uk/posts/files/b495a2ae-948c-496d-bd0b-b3f5b7b118ea.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="https://normansolutions.co.uk/posts/files/69a0adc5-5c7d-4850-ac39-5dc4438a3240.png" width="169" height="98"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;You will then be presented with the ‘YSlow’ dashboard – similar to the below screen shot.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;a href="https://normansolutions.co.uk/posts/files/fb33e20a-1a89-4a8b-ab44-44373001bb63.jpg"&gt;&lt;img title="YSlow" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="YSlow" src="https://normansolutions.co.uk/posts/files/267637b4-937b-49d8-bb11-06b38fc7c17b.jpg" width="204" height="180"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;Click the yellow &lt;strong&gt;‘Run Test’&lt;/strong&gt; button.&lt;/p&gt; &lt;p&gt;After a brief delay &lt;em&gt;(status indicated by a progress bar),&lt;/em&gt; you will be presented will an array of information on the YSlow &lt;strong&gt;Grade &lt;/strong&gt;tab &lt;em&gt;(this tab also includes a general overall webpage grading score; you are ideally aiming for an ‘A’ grade here)&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;However, leaving the Grade tab alone, if you click on the &lt;strong&gt;Statistics &lt;/strong&gt;tab – you will be presented with two pie charts, visually detailing the size of your web page.&lt;/p&gt; &lt;p&gt;One of these pie charts will be the &lt;em&gt;initial &lt;/em&gt;page size, whereas the other will be the &lt;em&gt;cached&lt;/em&gt; page size – which basically means the page size &lt;em&gt;after&lt;/em&gt; someone &lt;u&gt;re-visits&lt;/u&gt; your website &lt;em&gt;(this should be significantly less than the initial page size – if it isn’t, then your web developer needs to investigate the ‘caching’ options of the website).&lt;/em&gt;&lt;/p&gt; &lt;p&gt; &lt;hr&gt; &lt;strong&gt;Real world example:&lt;/strong&gt;  &lt;p&gt;The below screen shot was taken from a website that initially had huge performance loading issues.&amp;nbsp; You will note that the page size &lt;em&gt;(total weight)&lt;/em&gt; is &lt;em&gt;nearly 2MB,&lt;/em&gt; and the cached page is much smaller at 600K - (&lt;em&gt;I should mention that this had previously been &lt;u&gt;significantly&lt;/u&gt; worse, weighing in with a 5MB initial page load; alas, I no longer have a screen shot of the initial check).&lt;/em&gt;&lt;/p&gt; &lt;p&gt;This test was enough to present a justified concern to the company.&amp;nbsp; It’s still quite large, but arguably acceptable for a CMS – or not?&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;a href="https://normansolutions.co.uk/posts/files/110b1224-481a-421c-8ee1-cb1eac697821.jpg"&gt;&lt;img title="YSlowHigh" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="YSlowHigh" src="https://normansolutions.co.uk/posts/files/935ae518-4f7b-4db2-b7bf-1f5a5a70841c.jpg" width="500" height="166"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;The below screen shot was taken from my own website – which I’m not claiming to be a masterpiece by &lt;em&gt;any&lt;/em&gt; means, but purely as a reference point, you can see the initial page load is only 412K and the cached page size &lt;em&gt;(remember, that’s the one that gets loaded again &lt;u&gt;after&lt;/u&gt; an initial visit)&lt;/em&gt; is actually &lt;strong&gt;0.0K!&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Incidentally, it also scored a &lt;strong&gt;Grade A,&lt;/strong&gt; which I was quite chuffed about!&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;a href="https://normansolutions.co.uk/posts/files/4212a36a-c5f7-4852-a470-c5341838d1d7.jpg"&gt;&lt;img title="YSlowLow" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="YSlowLow" src="https://normansolutions.co.uk/posts/files/684a3232-724c-4037-83ac-f9f60e04c5e8.jpg" width="500" height="180"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;Before we leave &lt;strong&gt;Page Size&lt;/strong&gt; – it’s worth noting that &lt;u&gt;HTTP Requests&lt;/u&gt; are also &lt;em&gt;very&lt;/em&gt; important.&amp;nbsp; If you view an HTTP Request as a ‘trip’ to the server, then the more ‘trips’ you have to make, the more work the browser has to do, the more power it consumes &lt;em&gt;(this can even drain batteries on mobile devices),&lt;/em&gt; the slower the page loads – well, you get the idea!&lt;/p&gt; &lt;p&gt;So you need to keep your HTTP Requests to as &lt;strong&gt;few as possible&lt;/strong&gt;.&amp;nbsp; Again, look at the charts above for HTTP Requests –&amp;nbsp; I think you will agree, there is quite a difference &lt;img class="wlEmoticon wlEmoticon-smile" style="border-top-style: none; border-bottom-style: none; border-right-style: none; border-left-style: none" alt="Smile" src="https://normansolutions.co.uk/posts/files/1d5e6b5d-3b3a-45f3-a2a1-0259a5d166ac.png"&gt;&lt;/p&gt;&lt;small&gt; &lt;p&gt;&lt;em&gt;(Disclaimer: please be advised that the above website stats are not a scientific ‘like with like’ comparison, but do serve a purpose for blog demonstration)&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;/small&gt; &lt;hr&gt;  &lt;h2&gt;Optimisation and placement of scripts&lt;/h2&gt; &lt;p&gt;This secondary test is arguably slightly more involved than the page size inspection, but can still be &lt;em&gt;very&lt;/em&gt; &lt;em&gt;easily&lt;/em&gt; performed, using the magic of Chrome developer tools.&lt;/p&gt; &lt;p&gt;It primarily focuses on ensuring your CSS and JavaScript files &lt;em&gt;(two key elements to a modern website)&lt;/em&gt; are not only placed in the most efficient part of your web page, but also reduced to as few files as possible.&lt;/p&gt; &lt;p&gt;Remember we mentioned about keeping the HTTP Requests down?&amp;nbsp; Well every CSS and JavaScript file, is an &lt;strong&gt;individual&lt;/strong&gt; HTTP Request – if you have 15 CSS files and 15 JavaScript files, then you have 30 HTTP Requests &lt;u&gt;before&lt;/u&gt; you even start downloading any pictures and content!&lt;/p&gt; &lt;p&gt;Ok – open up Chrome, press the &lt;strong&gt;‘F12’&lt;/strong&gt; key on your keyboard and visit &lt;em&gt;(or refresh)&lt;/em&gt; your website - you should then be presented with the Chrome Developer Tools, similar to the below screen shot.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;a href="https://normansolutions.co.uk/posts/files/5008ae7a-c7d2-42b9-9a64-49a1b9f9f0ce.jpg"&gt;&lt;img title="Dev" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="Dev" src="https://normansolutions.co.uk/posts/files/15f2e8b7-1651-4889-8707-b89ff0a9d9ce.jpg" width="500" height="193"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;Be under no illusion – options for the &lt;a href="https://developers.google.com/chrome-developer-tools/" target="_blank"&gt;Chrome Dev Tools are vast&lt;/a&gt;&lt;em&gt;&lt;/em&gt;, and I would encourage you to investigate them further – however, for now, we are just looking at individual elements being loaded onto the page.&lt;/p&gt; &lt;p&gt;This initial view shows you &lt;strong&gt;individual items&lt;/strong&gt; being loaded by your website; indeed you may recognised some of the pictures.&amp;nbsp; It also provides you will a useful ‘Timeline’ indicator, detailing how long each element is taking to load!&lt;/p&gt; &lt;p&gt;You can sort and filter to only show ‘JavaScript’ or ‘CSS’ files &lt;em&gt;(by clicking on the ‘Type’ heading or the filter icon etc).&amp;nbsp; &lt;/em&gt;What you are looking for, is the presence of too many scripts, or duplicated files.&lt;/p&gt; &lt;p&gt;JavaScript files will end in &lt;strong&gt;‘.js’&lt;/strong&gt; and will display the type &lt;strong&gt;‘text/javascript’&lt;/strong&gt; (or possibly &lt;em&gt;‘application/javascript’&lt;/em&gt;), whereas CSS files will end in &lt;strong&gt;‘.css’&lt;/strong&gt; and display the type&lt;strong&gt; ‘text/css’&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;&lt;em&gt;In another &lt;strong&gt;real world example,&lt;/strong&gt; here I spotted a &lt;/em&gt;&lt;a href="http://jquery.com/" target="_blank"&gt;&lt;em&gt;jQuery&lt;/em&gt;&lt;/a&gt;&lt;em&gt; script being loaded onto the webpage twice (for no logical reason) – a small, but nevertheless poor mistake - again, this was enough to present a justified concern to the company, who surprise, surprise, removed the duplicate!&lt;/em&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;a href="https://normansolutions.co.uk/posts/files/ff23e7aa-9755-4c64-92ce-70e326e5066f.jpg"&gt;&lt;img title="jQuery" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="jQuery" src="https://normansolutions.co.uk/posts/files/4777a4d1-6a3d-4986-9989-de66d979fab1.jpg" width="476" height="75"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;There is a process which &lt;strong&gt;all &lt;/strong&gt;web developers should now be using called ‘&lt;a href="http://www.asp.net/mvc/tutorials/mvc-4/bundling-and-minification" target="_blank"&gt;combination and minification&lt;/a&gt;’ – this is where the web developer, attempts to combine all files of the same type &lt;em&gt;(be it JavaScript or CSS) &lt;/em&gt;into one single file, and then ‘squishes’ that file to make it’s overall size a lot smaller.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;em&gt;This obviously makes the download page size smaller, but also reduces those all important HTTP Requests!&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;In an ideal world you would have just one CSS file and one JavaScript file on your webpage.&amp;nbsp; For different, legitimate reasons, this is almost always impossible; &lt;strong&gt;but&lt;/strong&gt; there is no reason why a significant percentage of these files cannot be combined together and ‘squished’.&lt;/p&gt; &lt;p&gt;So, the takeaway from this test, is to &lt;strong&gt;count the number of JavaScript and CSS files&lt;/strong&gt;, and ask if there are too many and /or whether they are too big?&lt;/p&gt; &lt;p&gt; &lt;hr&gt;  &lt;h2&gt;Quick note on page blocking&lt;/h2&gt; &lt;p&gt;A final, but important point to mention, is the &lt;strong&gt;placement of scripts.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Ideal rule of thumb is: &lt;strong&gt;CSS to be placed in the head of the page&lt;/strong&gt; (e.g. at the top) whereas &lt;strong&gt;JavaScript should ideally be placed as far down the page as possible&lt;/strong&gt; (e.g. at the bottom).&amp;nbsp; Failure to do this, can give the perception of a slow loading webpage.&lt;/p&gt; &lt;p&gt;As before, there has to be flexibility and understanding with this rule, but in short, if you ‘right click’ on your webpage and then select &lt;strong&gt;‘View Page Source’&lt;/strong&gt; &lt;em&gt;(you don’t need the Chrome Dev Tools to do this),&lt;/em&gt; and then see a &lt;u&gt;vast&lt;/u&gt; quantity of JavaScript files sat at the &lt;u&gt;top&lt;/u&gt; of the page, then &lt;strong&gt;contact your web developer &lt;/strong&gt;and ask if there is a reason for this.&lt;/p&gt; &lt;hr&gt;  &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;I understand that this blog post could have gone into &lt;em&gt;&lt;u&gt;much&lt;/u&gt;&lt;/em&gt; greater depth about poor web design practices, and I am completely aware that this has only touched the surface in a couple of areas - &lt;em&gt;for instance, don’t get me going on unnecessary in-line styling, hacky JavaScript and poor security implementation for starters!&lt;/em&gt;&lt;/p&gt; &lt;p&gt;However, my goal wasn’t to write an exhaustive article about poor web design in it’s entirety, but simply to encourage the layperson, to look at their website with a more ‘technical’ eye and have the confidence to question legitimate poor practice; and where relevant, &lt;strong&gt;&lt;em&gt;challenge their web designer!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content>
  <ispublished>true</ispublished>
  <categories>
    <category>Website</category>
    <category>JavaScript</category>
    <category>CMS</category>
    <category>Blog</category>
  </categories>
  <comments>
    <comment isAdmin="false" isApproved="false" id="29421442-9bc3-419c-bd7f-a6d8a85a9a1f">
      <author>jenny</author>
      <email>jennythomas641@gmail.com</email>
      <website>http://www.fertilefrog.com/</website>
      <ip>122.168.194.112</ip>
      <userAgent>Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/34.0.1847.137 Safari/537.36</userAgent>
      <date>2014-05-17 06:20:55</date>
      <content>Wordpress cms is a good framework in which we can easily design and manage website.</content>
    </comment>
  </comments>
</post>