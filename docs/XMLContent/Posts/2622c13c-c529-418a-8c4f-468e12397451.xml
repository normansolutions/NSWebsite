<?xml version="1.0" encoding="utf-8"?>
<post>
  <title>PowerShell to secure AD users RDP access</title>
  <slug>powershell-to-secure-ad-users-rdp-access</slug>
  <author></author>
  <pubDate>2014-02-13 20:42:36</pubDate>
  <lastModified>2014-02-13 20:42:36</lastModified>
  <content>&lt;p&gt;It’s a sad fact that security can all too often be the &lt;a href="http://www.troyhunt.com/2012/07/lessons-in-website-security-anti.html" target="_blank"&gt;poor relative&lt;/a&gt; in software and systems design &lt;em&gt;(please note that this blog post is &lt;u&gt;not&lt;/u&gt; intended to address system security per se; the &lt;/em&gt;&lt;a href="https://www.owasp.org/index.php/Main_Page" target="_blank"&gt;&lt;em&gt;OWASP&lt;/em&gt;&lt;/a&gt;&lt;em&gt; website and / or security expert &lt;/em&gt;&lt;a href="http://www.troyhunt.com/" target="_blank"&gt;&lt;em&gt;Troy Hunt’s blog&lt;/em&gt;&lt;/a&gt;,&lt;em&gt; are good references for that topic).&lt;/em&gt;&lt;/p&gt; &lt;p&gt;This post is primarily designed to demonstrate a quick fix for what &lt;em&gt;could&lt;/em&gt; potential be a security hole pertaining to Active Directory user accounts and Remote Desktop access.  &lt;hr&gt;  &lt;h2&gt;AD User Options&lt;/h2&gt; &lt;p&gt;When creating a new user in AD, depending on the network environment, several account configurations are automatically set &lt;em&gt;(profile paths, home folder settings, group membership etc).&lt;/em&gt;&lt;/p&gt; &lt;p&gt;One of these options, is to &lt;strong&gt;allow&lt;/strong&gt; or &lt;strong&gt;deny&lt;/strong&gt; the user access to a &lt;a href="http://msdn.microsoft.com/en-us/library/aa383496(v=vs.85).aspx" target="_blank"&gt;Remote Desktop Session&lt;/a&gt;; in many instances this will automatically be set to allow, which is not &lt;em&gt;necessarily&lt;/em&gt; a bad thing.&amp;nbsp; However this &lt;em&gt;may&lt;/em&gt; be a security weakness, depending on circumstances &lt;em&gt;(e.g. possibly if one was to create a generic ‘visitors’ account etc).&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://normansolutions.co.uk/posts/files/04f8b955-78cf-412d-8d49-d7d5cd59beb7.jpg"&gt;&lt;img title="ADTS" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="ADTS" src="https://normansolutions.co.uk/posts/files/979763a7-af18-4ace-a47e-e6441a5f114f.jpg" width="346" height="412"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Clearly, this can be controlled manually &lt;em&gt;(by ticking / unticking the appropriate check box)&lt;/em&gt; or indeed by using &lt;a href="http://en.wikipedia.org/wiki/Group_Policy" target="_blank"&gt;Group Policy&lt;/a&gt;.&amp;nbsp; However, there may also be times when it is preferable to run a script, that will &lt;em&gt;&lt;u&gt;quickly&lt;/u&gt;&lt;/em&gt; change this setting for &lt;em&gt;all&lt;/em&gt; users, in a specific OU or OU’s.&lt;/p&gt; &lt;p&gt;For example, you may wish to &lt;strong&gt;instantly&lt;/strong&gt; deny this permission for &lt;em&gt;all&lt;/em&gt; users on the entire network, allowing for a more controlled re-enabling, per OU.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Enter PowerShell and &lt;a href="http://www.quest.com/powershell/activeroles-server.aspx" target="_blank"&gt;Quest ActiveRoles ADManagement&lt;/a&gt;, a set of free, predefined commands for Windows PowerShell.&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;Quest have offered this set of PowerShell extensions &lt;em&gt;(&lt;/em&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/ms714395(v=vs.85).aspx" target="_blank"&gt;&lt;em&gt;cmdlets&lt;/em&gt;&lt;/a&gt;&lt;em&gt; - or whatever the correct terminology for this add-on is &lt;img class="wlEmoticon wlEmoticon-smile" style="border-top-style: none; border-bottom-style: none; border-right-style: none; border-left-style: none" alt="Smile" src="https://normansolutions.co.uk/posts/files/905ba1d4-4ef8-4350-b71e-a656beb56cd4.png"&gt;),&lt;/em&gt; free of charge for several years; at this stage, it my be worth noting that &lt;a href="http://www.dell.com/learn/us/en/uscorp1/secure/2012-09-28-dell-acquisition-quest-software" target="_blank"&gt;Quest appear to have been purchased by Dell&lt;/a&gt; – although from what I can gather, there doesn’t appear to be any negative change in the availability of this extension.&lt;/p&gt; &lt;p&gt; &lt;hr&gt;  &lt;h2&gt;The Script&lt;/h2&gt; &lt;p&gt;The workflow is:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;To add the Quest Snapin &lt;em&gt;(which you will need to have downloaded and installed from &lt;a href="http://www.quest.com/powershell/activeroles-server.aspx" target="_blank"&gt;Quest ActiveRoles ADManagement&lt;/a&gt;).&lt;/em&gt;  &lt;li&gt;To locate all users in the appropriate OU of choice, in your Active Directory &lt;em&gt;(you will need to populate this with your own LDAP / AD settings etc).&lt;/em&gt;  &lt;li&gt;To select &lt;em&gt;only&lt;/em&gt; those users where this checkbox is currently set to &lt;strong&gt;false&lt;/strong&gt; &lt;em&gt;(e.g. enabled).&lt;/em&gt;  &lt;li&gt;To change this checkbox on all selected users, to &lt;strong&gt;true&lt;/strong&gt; &lt;em&gt;(e.g. disabled).&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&lt;script gitsrc="https://gist.github.com/normansolutions/8972413.js"&gt;&lt;/script&gt;&lt;noscript&gt;&lt;a href="https://gist.github.com/normansolutions/8972413" target="_blank"&gt;Click for code snippet&lt;/a&gt;&lt;/noscript&gt;  &lt;hr&gt; Clearly you can modify this script to &lt;u&gt;enable&lt;/u&gt; all users by just reversing the true and false settings as appropriate, within the script.  &lt;hr&gt; &lt;em&gt;As with any scripting solution, especially those associated with Active Directory, you are advised to test thoroughly &lt;u&gt;before&lt;/u&gt; deploying in anger!&lt;/em&gt;</content>
  <ispublished>true</ispublished>
  <categories>
    <category>DevOps</category>
    <category>PowerShell</category>
    <category>SysAdmin</category>
    <category>Script</category>
  </categories>
  <comments></comments>
</post>