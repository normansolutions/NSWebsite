<?xml version="1.0" encoding="utf-8"?>
<post>
  <title>Excel Macro to manipulate CAT data</title>
  <slug>excel-macro-to-manipulate-cat-data</slug>
  <author></author>
  <pubDate>2015-06-28 17:03:20</pubDate>
  <lastModified>2015-06-28 17:03:20</lastModified>
  <content>&lt;p&gt;Recently, I was asked whether I could provide some assistance with manipulating data, that had been exported from a &lt;a href="http://www.theschoolrun.com/year-7-cats-what-every-parent-needs-know" target="_blank"&gt;CAT&lt;/a&gt; results test.&amp;nbsp; The problem, had slowly been driving a colleague of mine, very slightly crazy!&lt;/p&gt; &lt;p&gt;It had been quite some time since I’d last written an Excel Macro, so in many ways I relished the challenge.&amp;nbsp; Thus here is the story.&lt;/p&gt; &lt;h1&gt;&lt;/h1&gt; &lt;h1&gt;&lt;/h1&gt; &lt;h2&gt;The Problem&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;To take exported data that was presented in a tabular fashion &lt;em&gt;(over 6 columns).&lt;/em&gt;  &lt;li&gt;To re-present the data, with the last &lt;strong&gt;three columns&lt;/strong&gt; transposed into their own row, with appropriate column title.&lt;/li&gt;&lt;/ul&gt; &lt;blockquote&gt; &lt;p&gt;It’s probably easier to view than to explain &lt;em&gt;(see below screen shots)&lt;/em&gt; – but in short, this was a classic convert columns to rows exercise!&lt;/p&gt;&lt;/blockquote&gt; &lt;hr&gt;  &lt;h2&gt;The Solution&lt;/h2&gt; &lt;p&gt;Time was not on my side when approaching this, so I took advantage of the fact the there were many ‘known’ set values that wouldn’t change &lt;em&gt;(column titles &amp;amp; column counts etc).&lt;/em&gt;&amp;nbsp; As such I ‘hard-coded’ these into the solution.&lt;/p&gt; &lt;p&gt;A little looping and incrementation proved to be the answer.&amp;nbsp; Below is the final script used.&lt;/p&gt; &lt;p&gt;&lt;script gitsrc="https://gist.github.com/normansolutions/d3d4f9b36baf554d376c.js"&gt;&lt;/script&gt;&lt;noscript&gt;&lt;a href="https://gist.github.com/d3d4f9b36baf554d376c"&gt;Click for code snippet&lt;/a&gt;&lt;/noscript&gt; &lt;/p&gt; &lt;hr&gt;  &lt;p&gt;&lt;strong&gt;SAMPLE SCREEN SHOT BEFORE&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://normansolutions.co.uk/posts/files/b43f43db-c478-449a-b244-20f3ac992423.jpg"&gt;&lt;img title="Before" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="Before" src="https://normansolutions.co.uk/posts/files/8f5759da-1304-4949-951a-add332c0ba7f.jpg" width="554" height="144"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;SAMPLE SCREEN SHOT AFTER&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://normansolutions.co.uk/posts/files/2ca22158-3774-4847-b1f3-7baf5d482766.jpg"&gt;&lt;img title="After" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="After" src="https://normansolutions.co.uk/posts/files/d90bbaa9-0aa0-48c0-9b66-03f60294b62d.jpg" width="553" height="210"&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;There was very little time for any proper code analysis or architecture – a simple, &lt;strong&gt;get the job done&lt;/strong&gt; was the order of the day.&lt;/p&gt; &lt;p&gt;Put simply, it worked and did indeed, &lt;em&gt;get the job done&lt;/em&gt;, resulting in a very happy customer.&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/normansolutions/CATDataSpreadsheetMacro/blob/master/CATData.xlsm" target="_blank"&gt;Link to example spreadsheet.&lt;/a&gt;&lt;/p&gt;</content>
  <ispublished>true</ispublished>
  <categories>
    <category>Macro</category>
    <category>Excel</category>
    <category>Script</category>
    <category>MIS</category>
    <category>QuickTip</category>
  </categories>
  <comments></comments>
</post>